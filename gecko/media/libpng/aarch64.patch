diff --git a/arm/filter_neon_intrinsics.c b/arm/filter_neon_intrinsics.c
--- a/arm/filter_neon_intrinsics.c
+++ b/arm/filter_neon_intrinsics.c
@@ -13,17 +13,17 @@
 
 #include "../pngpriv.h"
 
 #ifdef PNG_READ_SUPPORTED
 
 /* This code requires -mfpu=neon on the command line: */
 #if PNG_ARM_NEON_IMPLEMENTATION == 1 /* intrinsics code from pngpriv.h */
 
-#if defined(_MSC_VER) && defined(_M_ARM64)
+#if defined(_MSC_VER) && defined(_M_ARM64) && !defined(__clang__)
 #  include <arm64_neon.h>
 #else
 #  include <arm_neon.h>
 #endif
 
 /* libpng row pointers are not necessarily aligned to any particular boundary,
  * however this code will only work with appropriate alignment.  arm/arm_init.c
  * checks for this (and will not compile unless it is done). This code uses
diff --git a/media/libpng/arm/palette_neon_intrinsics.c b/media/libpng/arm/palette_neon_intrinsics.c
--- a/arm/palette_neon_intrinsics.c
+++ b/arm/palette_neon_intrinsics.c
@@ -9,17 +9,17 @@
  * For conditions of distribution and use, see the disclaimer
  * and license in png.h
  */
 
 #include "../pngpriv.h"
 
 #if PNG_ARM_NEON_IMPLEMENTATION == 1
 
-#if defined(_MSC_VER) && defined(_M_ARM64)
+#if defined(_MSC_VER) && defined(_M_ARM64) && !defined(__clang__)
 #  include <arm64_neon.h>
 #else
 #  include <arm_neon.h>
 #endif
 
 /* Build an RGBA8 palette from the separate RGB and alpha palettes. */
 void
 png_riffle_palette_neon(png_structrp png_ptr)
diff --git a/media/libpng/pngrtran.c b/media/libpng/pngrtran.c
--- a/pngrtran.c
+++ b/pngrtran.c
@@ -16,17 +16,17 @@
  * in pngtrans.c.
  */
 
 #include "pngpriv.h"
 
 #ifdef PNG_ARM_NEON_IMPLEMENTATION
 #  if PNG_ARM_NEON_IMPLEMENTATION == 1
 #    define PNG_ARM_NEON_INTRINSICS_AVAILABLE
-#    if defined(_MSC_VER) && defined(_M_ARM64)
+#    if defined(_MSC_VER) && defined(_M_ARM64) && !defined(__clang__)
 #      include <arm64_neon.h>
 #    else
 #      include <arm_neon.h>
 #    endif
 #  endif
 #endif
 
 #ifdef PNG_READ_SUPPORTED
